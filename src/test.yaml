openapi: 3.0.0
info:
  title: Combined API Specification
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
  /api/users/{id}:
    get:
      summary: Get user by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: User ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
        '404':
          description: Not Found
    put:
      summary: Update user by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      summary: Delete user by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: User ID
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /api/users/{id}/activate:
    patch:
      summary: Activate user by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: User ID
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '400':
          description: Bad Request
  /api/users/{id}/deactivate:
    patch:
      summary: Deactivate user by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        description: User ID
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        '400':
          description: Bad Request
  /api/users/search:
    get:
      summary: Search users
      parameters:
      - name: name
        in: query
        schema:
          type: string
        description: User name
      - name: role
        in: query
        schema:
          type: string
        description: User role
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
components:
  schemas:
    UserModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
        role:
          type: string
          maxLength: 50
        isActive:
          type: boolean
      required:
      - name
      - email
      - role
